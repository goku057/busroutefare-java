/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sourcepackage;

/**
 *
 * @author User
 */

import java.awt.event.KeyEvent;
import javax.swing.*;
import java.util.*;
import java.io.*;
public class HomeAdmin extends Home {

    
   String filePath="jinishpati/routelist";
   
   String filePath2="jinishpati/bus list";
   
    
    public HomeAdmin() {
        initComponents();
        setTitle("ADMIN-PANEL");
        
        jComboBox1.setModel(dmUpdate);
       // JOptionPane.showMessageDialog(null, );
    }
    
    void add(String name)
    {
        dmFrom.addElement(name);
        dmTo.addElement(name);
        dmUpdate.addElement(name);
        dmUpdate.setSelectedItem(name);
    }
    
    void delete(int index)
    {
        dmFrom.removeElementAt(index+1);
        dmTo.removeElementAt(index+1);
        dmUpdate.removeElementAt(index);
    }
    
    void update(int index,String name)
    {
        dmFrom.removeElementAt(index+1);
        dmTo.removeElementAt(index+1);
        dmUpdate.removeElementAt(index);
        dmFrom.insertElementAt(name, index+1);
        dmTo.insertElementAt(name, index+1);
        dmUpdate.insertElementAt(name, index);
        dmUpdate.setSelectedItem(name);
    }   
    
    void updateFile(String FileName)
    {
        try{
            File f= new File(FileName);
            FileWriter fw=new FileWriter(f);
            PrintWriter pr= new PrintWriter(fw);
            for(int i=0;i<dmFrom.getSize();i++)
            {
                pr.println(dmFrom.getElementAt(i));
                pr.flush();
                
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,"UpdateFile method e File nia pera");
        }
    }
    

    
   
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonNext = new javax.swing.JButton();
        jButtonBack = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButtonAdd = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButtonUpdate = new javax.swing.JButton();
        jButtonBusList = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonNext.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButtonNext.setText("NEXT");
        jButtonNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNextActionPerformed(evt);
            }
        });

        jButtonBack.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButtonBack.setText("BACK");
        jButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackActionPerformed(evt);
            }
        });

        jButton2.setText("Change Username & Password");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButtonAdd.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButtonAdd.setText("Add Route");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jButtonDelete.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButtonDelete.setText("Delete Route");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select..." }));

        jButtonUpdate.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButtonUpdate.setText("Update Route");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        jButtonBusList.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButtonBusList.setText("BUS List");
        jButtonBusList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBusListActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonDelete))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonBusList, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonBack)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonNext)))
                .addGap(36, 36, 36))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(177, 177, 177)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAdd)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonUpdate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonDelete)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBusList))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonNext)
                    .addComponent(jButtonBack)
                    .addComponent(jButton2))
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackActionPerformed
       
        this.setVisible(false);
        this.dispose();
        Login.obj1.setVisible(true);
        
    }//GEN-LAST:event_jButtonBackActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       new ChangePass().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
       
        boolean flag=true;
        String a=jTextField1.getText().toString();
        
        for(int i=0;i<dmFrom.getSize();i++)
        {
            if(a.equalsIgnoreCase(dmFrom.getElementAt(i).toString()))
            {
                flag=false;
                break;
            }
        }
        
        if(flag){
            
        
        if(jTextField1.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null,"Please enter a route name");
        }
        else
        {
        add(jTextField1.getText());
         
         jTextField1.setText("");
         updateFile(filePath+"/routelist.txt");
        }
        
      }
        
        else
        {
            JOptionPane.showMessageDialog(null,"This Route already exists","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
      
    
      int n=JOptionPane.showConfirmDialog(null, "You are about to delete a route.Are you sure","Confirmation",JOptionPane.YES_NO_OPTION);
      if(n==0){
          
          
      deletefiles(jComboBox1.getSelectedItem().toString());   
          
      delete(jComboBox1.getSelectedIndex());
      updateFile(filePath+"/routelist.txt");
      
      
      
      }
     
     
      
      
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
              
        
        boolean flag=true;
        
        String a=jTextField1.getText().toString();
        
        for(int i=0;i<dmFrom.getSize();i++)
        {
            if(a.equals(dmFrom.getElementAt(i).toString()))
            {
                flag=false;
                break;
            }
        }
        
        if(flag){
            
            
            if(jTextField1.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null,"Please enter a route name");
        }
            
        else{
                
                
                int b=JOptionPane.showConfirmDialog(null, "Are you sure about updating the route "+jComboBox1.getSelectedItem().toString()+" ?","Confirmation",JOptionPane.YES_NO_OPTION);
                if(b==1)
                {
                    return;
                }
                   updateRouteName(jComboBox1.getSelectedItem().toString(),a);
                   update(jComboBox1.getSelectedIndex(),jTextField1.getText());
                   jTextField1.setText("");
                   updateFile(filePath+"/routelist.txt");
            }
        
        
        }
        else
        {
            JOptionPane.showMessageDialog(null,"This Route already exists","Error",JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void jButtonNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNextActionPerformed
           
        route1=dmFrom.getSelectedItem().toString();
        route2=dmTo.getSelectedItem().toString();
        
        
           if((route1.equals("Select..."))||(route2.equals("Select...")))  
            {
                JOptionPane.showMessageDialog(null,"Please select the routes first");
            }
           
           else if(route1.equals(route2))
           { 
               
               JOptionPane.showMessageDialog(null, "HURRR MIA!!! ekhan theke ekhane bus khujen ken? ektu hatahati koren");
           }
            else
            {
                try{
                File folder= new File(filePath);
                //FileWriter fw=new FileWriter(filePath+"/output.txt");
                
                boolean flag=true;
                
                String filenames[]=folder.list();
                for(String s:filenames)
                {
                    if((route1+route2+".txt").equals(s))
                    {
                        
                        BusListAdmin object=new BusListAdmin(filePath+"/"+route1+route2+".txt",(route1+"-"+route2));
                        this.setVisible(false);
                        object.setVisible(true);
                        flag=false;
                        this.dispose();
                        break;
                    }
                    else if((route2+route1+".txt").equals(s))
                    {
                        BusListAdmin object=new BusListAdmin(filePath+"/"+route2+route1+".txt",(route2+"-"+route1));
                        this.setVisible(false);
                        object.setVisible(true);
                        this.dispose();
                        flag=false;
                        break;
                    }
                }
                
                if(flag)
                {
                    //flag=true;
                    
                    try{
                        
                        FileWriter fw= new FileWriter(filePath+"/"+route1+route2+".txt");
                        
                        JOptionPane.showMessageDialog(null, "NEW ROUTE HAS BEEN CREATED!!!");
                        fw.close();
                        
                        }
                    catch(Exception e)
                    {
                        JOptionPane.showMessageDialog(null, "Next BUtton e ekhno");
                    }
                }
                
            }
                
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(null, "HomeAdmin er NEXT button e pera");
                }
            }
           
           checkAndPrintValidRoute();
        
    }//GEN-LAST:event_jButtonNextActionPerformed

    private void jButtonBusListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBusListActionPerformed
        new BusListAdmin(filePath2+"/buslist.txt").setVisible(true);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_jButtonBusListActionPerformed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
             boolean flag=true;
        String a=jTextField1.getText().toString();
        
        for(int i=0;i<dmFrom.getSize();i++)
        {
            if(a.equalsIgnoreCase(dmFrom.getElementAt(i).toString()))
            {
                flag=false;
                break;
            }
        }
        
        if(flag){
            
        
        if(jTextField1.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null,"Please enter a route name");
        }
        else
        {
        add(jTextField1.getText());
         
         jTextField1.setText("");
         updateFile(filePath+"/routelist.txt");
        }
        
      }
        
        else
        {
            JOptionPane.showMessageDialog(null,"This Route already exists","Error",JOptionPane.ERROR_MESSAGE);
        }
        }
    }//GEN-LAST:event_jTextField1KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomeAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomeAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomeAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomeAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomeAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonBack;
    private javax.swing.JButton jButtonBusList;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonNext;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
